@use "sass:math";
$grid-columns: 12;
$grid-gutter-width: 30px;
$grid-row-columns: 6;
$grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px,
);
$container-max-widths: (
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1170px,
    xxl: 1320px,
);

%column-gutter {
    margin-left: $grid-gutter-width * 0.5;
}

.container-fluid {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
}

.container {
    @extend .container-fluid;
}

.row {
    display: flex;
    flex-wrap: wrap;
    // margin-left: calc(#{-$grid-gutter-width} * 0.5 - 15px);
    margin-left: -$grid-gutter-width * 0.5;

    > * {
        @extend %column-gutter;
    }
}

.col {
    flex: 1 0;
}

[class*="col-"],
[class*="row-cols-"] > * {
    flex: 0 0 auto;
}

@mixin make-media-query($dimension, $bypass: false) {
    @if $bypass {
        .container {
            padding: 0 18px;
        }
        @content;
    } @else {
        @media (min-width: $dimension) {
            @content;
        }
    }
}

@mixin make-columns($infix) {
    $gutter-width: $grid-gutter-width * 0.5;
    @for $i from 1 through $grid-columns {
        .col#{$infix}-#{$i} {
            width: calc(math.div(100%, $grid-columns) * $i - #{$gutter-width});
        }
    }
}

@mixin make-row-cols($infix) {
    $gutter-width: $grid-gutter-width * 0.5;
    @for $i from 1 through $grid-row-columns {
        .row-cols#{$infix}-#{$i} > * {
            width: calc(math.div(100%, $i) - #{$gutter-width});
        }
    }
}

@mixin make-offset($infix) {
    $gutter-width: $grid-gutter-width * 0.5;
    @for $i from 0 to $grid-columns {
        .offsets#{$infix}-#{$i} {
            margin-left: if(
                $i > 0,
                calc(math.div(100%, $grid-columns) * $i + #{$gutter-width}),
                15px
            );
        }
    }
}

@each $breakpoint, $dimension in $grid-breakpoints {
    $max-width: map-get($container-max-widths, $breakpoint);
    $is-xs: $breakpoint == "xs";
    $infix: if($is-xs, "", "-#{$breakpoint}");

    @include make-media-query($dimension, $is-xs) {
        .container {
            max-width: $max-width;
        }
        @include make-row-cols($infix);
        @include make-columns($infix);
        @include make-offset($infix);
    }
}
